@startuml
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

!define osaPuml https://raw.githubusercontent.com/Crashedmind/PlantUML-opensecurityarchitecture2-icons/master
!include osaPuml/Common.puml
!include osaPuml/Site/all.puml

LAYOUT_LEFT_RIGHT()

AddElementTag("facade", $bgColor="#fdae61", $fontColor="black")
AddElementTag("storage", $shape=RoundedBoxShape(), $bgColor="lightSkyBlue", $fontColor="white")
AddElementTag("databus", $shape=RoundedBoxShape(), $bgColor="lightYellow", $fontColor="black")
AddElementTag("controller", $bgColor="lightgrey", $fontColor="black")
AddRelTag("async", $textColor=$ARROW_FONT_COLOR, $lineColor=$ARROW_COLOR, $lineStyle=DashedLine())

Container(spa, "SPA", "Javascript", "Веб-интерфейс Личного Кабинета пользователя", $tags = "facade")
ContainerDb(telemetry_oltp_db, "Telemetry OLTP Database", "SQL Database", "БД Телеметрии", $tags = "storage")
ContainerDb(telemetry_bus, "Telemetry Topic", "AMQP", "Очередь данных с устройств", $tags = "databus")
System_Ext(device, "Устройство", "Устройства, модули установленные в домах", $sprite="osa_site_neighbourhood")
Container(streaming_microservice, "Streaming Microservice", "Go", "Микросервис видео")

Container_Boundary(telemetry_microservice, "Telemetry Microservice") {
    Component(telemetry_microservice.telemetry_controller, "TelemetryController", "MVC Rest Controller", "Управление данными с устройств", $tags = "controller")
    Component(telemetry_microservice.telemetry_consumer, "TelemetryConsumer", "Backend", "Точка входа для асинхронного процессинга данных с устройств", $tags = "facade")
    Component(telemetry_microservice.telemetry_service, "TelemetryService", "Backend", "Управление данными с устройств")
}

Container_Boundary(ext_device_api_gateway, "External Device API Gateway") {
    Component(ext_device_api_gateway.device_data_api, "DeviceDataAPI", "Backend", "Логика маршрутизации данных с устройств", $tags = "facade")
}

Rel(spa, telemetry_microservice.telemetry_controller, "API получения данных с устройств", "sync, JSON/HTTPS")
Rel(spa, streaming_microservice, "Запрашивает видео")

Rel(telemetry_microservice.telemetry_controller, telemetry_microservice.telemetry_service, "")
Rel(telemetry_microservice.telemetry_consumer, telemetry_microservice.telemetry_service, "")
Rel(telemetry_microservice.telemetry_service, telemetry_oltp_db, "", "JDBC")
Rel(telemetry_microservice.telemetry_consumer, telemetry_bus, "Читает из", $tags = "async")

Rel(device, ext_device_api_gateway.device_data_api, "Посылает данные, sync")
Rel(ext_device_api_gateway.device_data_api, streaming_microservice, "Отправляет потоковые данные с устройства в")
Rel(ext_device_api_gateway.device_data_api, telemetry_bus, "Публикует данные с устройства в", $tags = "async")

@enduml