openapi: 3.1.0
info:
  title: SaaS SmartHouse DeviceMicroservice API spec - OpenAPI 3.0
  description: Provides Addresses and Devices management API. Allows to configure custom scenarios.
  version: 1.0.0
servers:
  - url: 'https://localhost:8082/api/v1'
tags:
  - name: location
    description: Address and location management
  - name: device
    description: Device management
  - name: scenario
    description: Device scenario management
paths:
  /house/{houseId}:
    get:
      tags:
        - location
      summary: Find House by ID.
      description: Returns a single House.
      parameters:
        - name: houseId
          in: path
          description: ID of House to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/House'
        '400':
          description: Invalid ID supplied
        '404':
          description: House not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /house/{houseId}/location/{locationId}:
    get:
      tags:
        - location
      summary: Find Location by ID.
      description: Returns a single Location in House.
      parameters:
        - name: houseId
          in: path
          description: ID of House
          required: true
          schema:
            type: integer
            format: int64
        - name: locationId
          in: path
          description: ID of Location to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Invalid ID supplied
        '404':
          description: Location not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /device/list:
    get:
      tags:
        - device
      summary: Get all devices.
      description: Returns Device collection.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
        '400':
          description: Invalid status value
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /device/{deviceId}/healthcheck:
    get:
      tags:
        - device
      summary: Check actual availability status of an external device.
      description: Returns true - if a device is available, false otherwise.
      parameters:
        - name: deviceId
          in: path
          description: ID of a Device to healthcheck
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  availability_status:
                    type: bool
                    example: true
        '400':
          description: Invalid ID supplied
        '404':
          description: Device not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /scenario:
    post:
      tags:
        - scenario
      summary: Add a new home scenario.
      description: Add a new home scenario using SmartHouse special built-in language.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    House:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        address:
          type: string
          example: Moscow Barvikha
        description:
          type: string
          example: Home Sweet Home
    Location:
      required:
        - house
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        house:
          $ref: '#/components/schemas/House'
        description:
          type: string
          example: Kitchen
    DeviceType:
      type: object
      properties:
        id:
          type: integer
          format: int8
          example: 1
        name:
          type: string
          example: heating system
    Device:
      required:
        - device_type
        - location
        - serial_number
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 5
        device_type:
          $ref: '#/components/schemas/DeviceType'
        location:
          $ref: '#/components/schemas/Location'
        serial_number:
          type: integer
          example: 3481097512
        availability_status:
          type: bool
          example: true
        description:
          type: string
          example: Kitchen heating controller
        state:
          type: string
          example: 'on'
    Scenario:
      required:
        - house
        - scenario
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        house:
          $ref: '#/components/schemas/House'
        scenario:
          type: string
          example: 'When the average temperature over the last hour was +18 then turn on the heating'
        description:
          type: string
          example: 'Heating system behavior'
    ScenarioRequest:
      type: object
      properties:
        house_id:
          type: integer
          example: 1
        scenario:
          type: string
          example: 'When the average temperature over the last hour was +18 then turn on the heating'
        description:
          type: string
          example: 'Heating system behavior'
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message