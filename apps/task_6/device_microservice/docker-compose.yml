version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: device-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - device-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d device_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  device-api:
    image: nginx:stable-alpine
    container_name: device-api
    volumes:
      - ./src:/var/www/public:ro
      - ./dockerfiles/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - device-network
    ports:
      - "8080:80"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      device-fpm:
        condition: service_started

  device-fpm:
    build:
      context: .
      dockerfile: dockerfiles/php/Dockerfile
    container_name: device-fpm
    volumes:
      - ./src:/var/www/public
    networks:
      - device-network
    restart: unless-stopped
    extra_hosts:
      - "device-api-gateway:host-gateway"
    environment:
      - DEVICE_API_GATEWAY=http://device-api-gateway:8082/device-api-gateway/v1

volumes:
  postgres_data:

networks:
  device-network:
    driver: bridge